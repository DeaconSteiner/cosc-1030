// Lab05.cpp
// Deacon Steiner
// COSC 1030, Section 12
// Lab 05
// Feb 19, 2025

deacon@deacon-lenovo:~/cosc-1030/repos/cosc-1030/Lab05$ ./float // Original table using floating point values
Enter the smallest positive integer to use (greater than 0):  1

Enter the largest positive integer (greater than 1):  10

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     n        Recip (1/n)         Sum 1/n n*           CMP 1
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     1      1.00000000e+00      1.00000000e+00          ==
     2      5.00000000e-01      1.00000000e+00          ==
     3      3.33333343e-01      1.00000000e+00          ==
     4      2.50000000e-01      1.00000000e+00          ==
     5      2.00000003e-01      1.00000000e+00          ==
     6      1.66666672e-01      1.00000000e+00          ==
     7      1.42857149e-01      1.00000000e+00          ==
     8      1.25000000e-01      1.00000000e+00          ==
     9      1.11111112e-01      1.00000000e+00          ==
    10      1.00000001e-01      1.00000012e+00           >
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
This C++ compiler reports 6 decimal digits for float precision numbers,
also the maximum positive int integer is 2147483647

deacon@deacon-lenovo:~/cosc-1030/repos/cosc-1030/Lab05$ ./double // New table using double precision values
Enter the smallest positive integer to use (greater than 0):  1

Enter the largest positive integer (greater than 1):  10

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     n            Recip (1/n)                  Sum 1/n n*               CMP 1
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     1      1.00000000000000000e+00      1.00000000000000000e+00          ==
     2      5.00000000000000000e-01      1.00000000000000000e+00          ==
     3      3.33333333333333315e-01      1.00000000000000000e+00          ==
     4      2.50000000000000000e-01      1.00000000000000000e+00          ==
     5      2.00000000000000011e-01      1.00000000000000000e+00          ==
     6      1.66666666666666657e-01      9.99999999999999889e-01           <
     7      1.42857142857142849e-01      9.99999999999999778e-01           <
     8      1.25000000000000000e-01      1.00000000000000000e+00          ==
     9      1.11111111111111105e-01      1.00000000000000022e+00           >
    10      1.00000000000000006e-01      9.99999999999999889e-01           <
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
This C++ compiler reports 15 decimal digits for double precision numbers,
also the maximum positive int integer is 2147483647


